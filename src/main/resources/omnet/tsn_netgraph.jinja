import inet.node.ethernet.EthernetLink;
import inet.networks.base.TsnNetworkBase;
import inet.node.tsn.*;
import inet.protocolelement.measurement.MultiMeasurementLayer;

network DNCTSNNetwork extends TsnNetworkBase
{
    submodules:
        // This starts with a list of devices
{% for dev in devices %}
        {{dev.identifier}}: {{dev.type}};
{% endfor %}

    connections:
{% for con in connections %}
        {{con.src}}.ethg++ <--> EthernetLink <--> {{con.dst}}.ethg++;
{% endfor %}
}

// Custom definitions for Measurement Layer support in TSN
module TSNFlowMonitorDevice extends TsnDevice
{
    submodules:
        measurementLayer: MultiMeasurementLayer {
            @display("p=454,279");
        }
    connections:
        udp.ipOut --> { @reconnect; } --> measurementLayer.upperLayerIn if hasUdp;
        measurementLayer.lowerLayerOut --> { @reconnect; } --> tn.in[0] if hasUdp;
        udp.ipIn <-- { @reconnect; } <-- measurementLayer.upperLayerOut if hasUdp;
        measurementLayer.lowerLayerIn <-- { @reconnect; } <-- tn.out[0] if hasUdp;
}