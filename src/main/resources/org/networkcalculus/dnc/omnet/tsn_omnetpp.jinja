[General]
network = DNCTSNNetwork

# Run the simulation for a fixed amount of time
sim-time-limit = {{max_time_s}}s

# Change result output filename
output-scalar-file = "data.sca"

# visualizer settings (for debugging purposes)
*.visualizer.packetFlowVisualizer.displayRoutes = true
*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true
*.visualizer.interfaceTableVisualizer.format = "%N %\\%a/%l%\\%m"

# Set the default bitrate to 10Gbps so its large enough for the curves
**.eth[*].bitrate = 10Gbps

# Time to add the sources
{% for id, source in sources.items() %}
# {{id}} sources
*.{{id}}.numApps = {{source|length}}

# Create the flow start and ends that send the packets
{% for src in source %}
{% set i = loop.index0 %}
*.{{id}}.app[{{i}}].typename = {{src.type}}
*.{{id}}.app[{{i}}].source.packetNameFormat = "%M->{{src.flowid}}-%c"
*.{{id}}.app[{{i}}].source.packetLength = {{src.length}}b
*.{{id}}.app[{{i}}].source.productionInterval = {{src.interval}}us
*.{{id}}.app[{{i}}].io.destAddress = "{{src.dst.address}}"
*.{{id}}.app[{{i}}].io.destPort = {{src.dst.port}}

{% if src.withMeasurement %}
# Create flow start monitoring
*.{{id}}.app[{{i}}].measurementStarter.typename = "FlowMeasurementStarter"
*.{{id}}.app[{{i}}].measurementStarter.flowName = "{{src.flowid}}"
*.{{id}}.app[{{i}}].measurementStarter.measure = "elapsedTime"
{% else %}
*.{{id}}.app[{{i}}].measurementStarter.typename = ""
{% endif %}

{% endfor %}
{% endfor %}

# Now lets add the sinks
{% for id, apps in sinks.items() %}
# {{id}} sinks
*.{{id}}.numApps = {{apps|length}}

# Create the applications that the sink runs
{% for app in apps %}
{% set i = loop.index0 %}
*.{{id}}.app[{{i}}].typename = "{{app.type}}"
*.{{id}}.app[{{i}}].display-name = "{{app.name}}"
*.{{id}}.app[{{i}}].io.localPort = {{app.port}}

{% if app.withMeasurement %}
# Create flow target monitoring
*.{{id}}.app[{{i}}].measurementRecorder.measure = "elapsedTime"
*.{{id}}.app[{{i}}].measurementRecorder.flowName = "{{app.flowid}}"
*.{{id}}.app[{{i}}].measurementRecorder.typename = "FlowMeasurementRecorder"
{% else %}
*.{{id}}.app[{{i}}].measurementRecorder.typename = ""
{% endif %}
{% endfor %}
{% endfor %}

# Create service rate limits
{% for dev in devices %}
{% if dev.servicerateLimit > 0.0 %}
# Rate limit for {{dev.identifier}}
*.{{dev.identifier}}.eth[*].macLayer.server.typename = "PacketServer"
*.{{dev.identifier}}.eth[*].macLayer.server.processingBitrate = {{dev.servicerateLimit}} bps
*.{{dev.identifier}}.eth[*].macLayer.server.processingTime = 0s
{% endif %}
{% endfor %}